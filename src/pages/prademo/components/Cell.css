/* src/components/Cell.css */
.cell {
  border: 1px solid black;
  min-width: 60px;
  height: 60px;
  position: relative;
  box-sizing: border-box; /* Include padding and border in element's total width and height */
  background-color: #f0f0f0;
  display: flex; /* Use flex to help center dots later if needed */
  align-items: center;
  justify-content: center;
}

.cell-number {
  position: absolute;
  top: 2px;
  right: 2px;
  font-size: 0.7em;
  color: #555;
}

.player-dots {
  position: relative; /* Container for absolutely positioned dots if needed */
  width: 100%;
  height: 100%;
  display: flex;
  flex-wrap: wrap; /* Allow dots to wrap if many players */
  align-items: center;
  justify-content: center;
  padding: 5px; /* Add some padding */
}

.player-dot {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  border: 1px solid #333;
  position: absolute; /* Position dots relative to .player-dots */
  /* transform offsets applied via inline style */
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);
  z-index: 10;
}

/* Container for the bars inside the cell */
.bar-container {
  position: absolute;
  /* Position it within the cell, leaving a small margin */
  top: 5%;
  left: 5%;
  bottom: 5%;
  right: 5%;
  /* Use flexbox to arrange the bars */
  display: flex;
  align-items: center; /* Vertically center bars in the container */
  justify-content: flex-start; /* Align bars to the start (left) */
  gap: 2px; /* Space between bars */
  height: 90%; /* Corresponds to top/bottom 5% */
  width: 90%; /* Corresponds to left/right 5% */
}

/* Individual bar style */
.bar {
  height: 100%; /* Fill the vertical space of the bar-container */
  width: 5px; /* Adjust width as needed. 5px * 8 + 7 * 2px gap = 54px, fits within 90% of 60px */
  background-color: #ccc; /* Default color */
  border-radius: 1px; /* Optional: slightly rounded corners */
  flex-shrink: 0; /* Prevent bars from shrinking if space is tight */
}
